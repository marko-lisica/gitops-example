on:
  schedule:
    - cron: '0 */12 * * *' # Runs every 12 hours
  workflow_dispatch: # Allows manual triggering of the workflow

jobs:
  sync:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout GitOps repo
        uses: actions/checkout@v2

      - name: Get list of apps to fetch from Fleet
        id: load_config
        run: |
          echo "files=$(cat sync-config.yml | grep -oP '(?<=- ).*')" >> $GITHUB_ENV

      - name: Sync apps
        run: |
          # Create a temporary directory to store synced files
          mkdir -p synced_files

          # Loop through each file in the sync config
          IFS=$'\n' # Set the internal field separator to newline
          for file in $files; do
            echo "Fetching $file from Repo B..."
            # Fetch the file from repo B
            if curl -L -o "synced_files/$file" "https://raw.githubusercontent.com/marko-lisica/app-library-example/refs/heads/main/apps/$file"; then
              echo "Successfully fetched $file"
            else
              echo "Failed to fetch $file"
            fi
          done

          # List the files that were fetched
          echo "Files fetched:"
          ls -l synced_files/

      - name: Compare and Commit Changes
        run: |
          # Check for changes
          git config --global user.name "GitHub Action"
          git config --global user.email "action@github.com"

          # Create a new branch for changes
          BRANCH_NAME="sync-branch-$(date +'%Y%m%d%H%M%S')"
          git checkout -b $BRANCH_NAME
          
          # Copy files to the repo's working directory
          cp -r synced_files/* .

          # Check for differences and commit if there are changes
          git diff --quiet || {
            git add .
            git commit -m "Sync files from Repo B"
            git push origin $BRANCH_NAME
          }

      - name: Create Pull Request
        id: create_pr
        run: |
          # Create a pull request if there are changes
          if [[ $(git rev-parse --abbrev-ref HEAD) == $BRANCH_NAME ]]; then
            gh pr create --base main --head $BRANCH_NAME --title "Sync files from Repo B" --body "Automated sync of files from Repo B."
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
